
14/04/2023 10:23:21

-------------------------


14/04/2023 10:23:50

-------------------------


14/04/2023 10:24:22

-------------------------

Constrained quadratic model: 24 variables, 54 constraints, 240 biases

Objective
  3*Binary('x_(3, 1)*x_(4, 2)') + 3*Binary('x_(4, 1)*x_(2, 4)') + 3*Binary('x_(2, 3)*x_(1, 4)') + 3*Binary('x_(1, 3)*x_(3, 2)') + 3*Binary('x_(4, 1)*x_(3, 4)') + 3*Binary('x_(3, 2)*x_(1, 4)') + 3*Binary('x_(2, 3)*x_(1, 2)') + 3*Binary('x_(2, 1)*x_(4, 3)') + 3*Binary('x_(1, 3)*x_(3, 4)') + 3*Binary('x_(3, 1)*x_(1, 2)') + 3*Binary('x_(2, 4)*x_(4, 3)') + 3*Binary('x_(4, 2)*x_(2, 1)') + Binary('x_(3, 1)')*Binary('x_(4, 2)') - 2*Binary('x_(3, 1)')*Binary('x_(3, 1)*x_(4, 2)') - 2*Binary('x_(4, 2)')*Binary('x_(3, 1)*x_(4, 2)') + Binary('x_(4, 1)')*Binary('x_(2, 4)') - 2*Binary('x_(4, 1)')*Binary('x_(4, 1)*x_(2, 4)') - 2*Binary('x_(2, 4)')*Binary('x_(4, 1)*x_(2, 4)') + Binary('x_(3, 1)*x_(4, 2)')*Binary('x_(2, 3)') + Binary('x_(3, 1)*x_(4, 2)')*Binary('x_(1, 4)') + Binary('x_(2, 3)')*Binary('x_(1, 4)') + Binary('x_(3, 1)')*Binary('x_(2, 3)*x_(1, 4)') + Binary('x_(4, 2)')*Binary('x_(2, 3)*x_(1, 4)') - 2*Binary('x_(2, 3)')*Binary('x_(2, 3)*x_(1, 4)') - 2*Binary('x_(1, 4)')*Binary('x_(2, 3)*x_(1, 4)') + Binary('x_(4, 1)*x_(2, 4)')*Binary('x_(1, 3)') + Binary('x_(4, 1)*x_(2, 4)')*Binary('x_(3, 2)') + Binary('x_(1, 4)')*Binary('x_(3, 2)') + Binary('x_(1, 3)')*Binary('x_(3, 2)') + Binary('x_(4, 1)')*Binary('x_(1, 3)*x_(3, 2)') + Binary('x_(2, 4)')*Binary('x_(1, 3)*x_(3, 2)') - 2*Binary('x_(1, 3)')*Binary('x_(1, 3)*x_(3, 2)') - 2*Binary('x_(3, 2)')*Binary('x_(1, 3)*x_(3, 2)') + Binary('x_(4, 1)')*Binary('x_(3, 4)') + Binary('x_(1, 3)')*Binary('x_(3, 4)') - 2*Binary('x_(4, 1)')*Binary('x_(4, 1)*x_(3, 4)') + Binary('x_(2, 3)')*Binary('x_(4, 1)*x_(3, 4)') - 2*Binary('x_(3, 4)')*Binary('x_(4, 1)*x_(3, 4)') - 2*Binary('x_(1, 4)')*Binary('x_(3, 2)*x_(1, 4)') - 2*Binary('x_(3, 2)')*Binary('x_(3, 2)*x_(1, 4)') + Binary('x_(3, 1)')*Binary('x_(1, 2)') + Binary('x_(2, 3)')*Binary('x_(1, 2)') + Binary('x_(4, 1)*x_(3, 4)')*Binary('x_(1, 2)') + Binary('x_(4, 1)')*Binary('x_(2, 3)*x_(1, 2)') - 2*Binary('x_(2, 3)')*Binary('x_(2, 3)*x_(1, 2)') + Binary('x_(3, 4)')*Binary('x_(2, 3)*x_(1, 2)') - 2*Binary('x_(1, 2)')*Binary('x_(2, 3)*x_(1, 2)') + Binary('x_(4, 2)')*Binary('x_(2, 1)') + Binary('x_(3, 2)*x_(1, 4)')*Binary('x_(2, 1)') + Binary('x_(2, 4)')*Binary('x_(4, 3)') + Binary('x_(3, 2)*x_(1, 4)')*Binary('x_(4, 3)') + Binary('x_(2, 1)')*Binary('x_(4, 3)') + Binary('x_(1, 4)')*Binary('x_(2, 1)*x_(4, 3)') + Binary('x_(3, 2)')*Binary('x_(2, 1)*x_(4, 3)') - 2*Binary('x_(2, 1)')*Binary('x_(2, 1)*x_(4, 3)') - 2*Binary('x_(4, 3)')*Binary('x_(2, 1)*x_(4, 3)') + Binary('x_(4, 2)')*Binary('x_(1, 3)*x_(3, 4)') - 2*Binary('x_(1, 3)')*Binary('x_(1, 3)*x_(3, 4)') - 2*Binary('x_(3, 4)')*Binary('x_(1, 3)*x_(3, 4)') + Binary('x_(2, 1)')*Binary('x_(1, 3)*x_(3, 4)') - 2*Binary('x_(3, 1)')*Binary('x_(3, 1)*x_(1, 2)') + Binary('x_(2, 4)')*Binary('x_(3, 1)*x_(1, 2)') - 2*Binary('x_(1, 2)')*Binary('x_(3, 1)*x_(1, 2)') + Binary('x_(4, 3)')*Binary('x_(3, 1)*x_(1, 2)') + Binary('x_(3, 1)')*Binary('x_(2, 4)*x_(4, 3)') - 2*Binary('x_(2, 4)')*Binary('x_(2, 4)*x_(4, 3)') + Binary('x_(1, 2)')*Binary('x_(2, 4)*x_(4, 3)') - 2*Binary('x_(4, 3)')*Binary('x_(2, 4)*x_(4, 3)') - 2*Binary('x_(4, 2)')*Binary('x_(4, 2)*x_(2, 1)') + Binary('x_(1, 3)')*Binary('x_(4, 2)*x_(2, 1)') + Binary('x_(3, 4)')*Binary('x_(4, 2)*x_(2, 1)') - 2*Binary('x_(2, 1)')*Binary('x_(4, 2)*x_(2, 1)')

Constraints
  L1: discrete on nodes (1, 3): Binary('x_(1, 3)') + Binary('x_(3, 1)') == 1.0
  L1: discrete on nodes (2, 4): Binary('x_(2, 4)') + Binary('x_(4, 2)') == 1.0
  L1: discrete on nodes (1, 4): Binary('x_(1, 4)') + Binary('x_(4, 1)') == 1.0
  L1: discrete on nodes (2, 3): Binary('x_(2, 3)') + Binary('x_(3, 2)') == 1.0
  L1: discrete on nodes (2, 1): Binary('x_(2, 1)') + Binary('x_(1, 2)') == 1.0
  ...
  L1: >= transitive constraint nodes (3, 4, 2): Binary('x_(3, 4)') + Binary('x_(4, 2)') - Binary('x_(3, 2)') >= 0.0
  L1: <= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') <= 1.0
  L1: >= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') >= 0.0
  L1: <= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') <= 1.0
  L1: >= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') >= 0.0

Bounds


-------------------------

Sample(sample={'x_(1, 2)': 1.0, 'x_(1, 3)': 1.0, 'x_(1, 3)*x_(3, 2)': 0.0, 'x_(1, 3)*x_(3, 4)': 0.0, 'x_(1, 4)': 1.0, 'x_(2, 1)': 0.0, 'x_(2, 1)*x_(4, 3)': 0.0, 'x_(2, 3)': 0.0, 'x_(2, 3)*x_(1, 2)': 0.0, 'x_(2, 3)*x_(1, 4)': 0.0, 'x_(2, 4)': 0.0, 'x_(2, 4)*x_(4, 3)': 0.0, 'x_(3, 1)': 0.0, 'x_(3, 1)*x_(1, 2)': 0.0, 'x_(3, 1)*x_(4, 2)': 0.0, 'x_(3, 2)': 0.0, 'x_(3, 2)*x_(1, 4)': 0.0, 'x_(3, 4)': 0.0, 'x_(4, 1)': 0.0, 'x_(4, 1)*x_(2, 4)': 0.0, 'x_(4, 1)*x_(3, 4)': 0.0, 'x_(4, 2)': 1.0, 'x_(4, 2)*x_(2, 1)': 0.0, 'x_(4, 3)': 1.0}, energy=0.0, num_occurrences=1, is_satisfied=array([ True,  True,  True,  True, False,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True]), is_feasible=False)

-------------------------


14/04/2023 10:31:17

-------------------------

Constrained quadratic model: 20 variables, 54 constraints, 216 biases

Objective
  3*Binary('x_(4, 1)*x_(1, 3)') + 3*Binary('x_(4, 2)*x_(1, 4)') + 3*Binary('x_(3, 2)*x_(2, 4)') + 3*Binary('x_(2, 3)*x_(3, 1)') + 3*Binary('x_(4, 2)*x_(1, 3)') + 3*Binary('x_(3, 1)*x_(2, 4)') + 3*Binary('x_(4, 3)*x_(1, 2)') + 3*Binary('x_(2, 1)*x_(3, 4)') + Binary('x_(4, 1)')*Binary('x_(1, 3)') - 2*Binary('x_(4, 1)')*Binary('x_(4, 1)*x_(1, 3)') - 2*Binary('x_(1, 3)')*Binary('x_(4, 1)*x_(1, 3)') + Binary('x_(1, 3)')*Binary('x_(4, 2)') + Binary('x_(4, 2)')*Binary('x_(1, 4)') - 2*Binary('x_(4, 2)')*Binary('x_(4, 2)*x_(1, 4)') - 2*Binary('x_(1, 4)')*Binary('x_(4, 2)*x_(1, 4)') + Binary('x_(4, 1)*x_(1, 3)')*Binary('x_(3, 2)') + Binary('x_(4, 1)*x_(1, 3)')*Binary('x_(2, 4)') + Binary('x_(3, 2)')*Binary('x_(2, 4)') + Binary('x_(4, 1)')*Binary('x_(3, 2)*x_(2, 4)') + Binary('x_(1, 3)')*Binary('x_(3, 2)*x_(2, 4)') - 2*Binary('x_(3, 2)')*Binary('x_(3, 2)*x_(2, 4)') - 2*Binary('x_(2, 4)')*Binary('x_(3, 2)*x_(2, 4)') + Binary('x_(4, 2)*x_(1, 4)')*Binary('x_(2, 3)') + Binary('x_(4, 2)*x_(1, 4)')*Binary('x_(3, 1)') + Binary('x_(2, 4)')*Binary('x_(3, 1)') + Binary('x_(2, 3)')*Binary('x_(3, 1)') + Binary('x_(4, 2)')*Binary('x_(2, 3)*x_(3, 1)') + Binary('x_(1, 4)')*Binary('x_(2, 3)*x_(3, 1)') - 2*Binary('x_(2, 3)')*Binary('x_(2, 3)*x_(3, 1)') - 2*Binary('x_(3, 1)')*Binary('x_(2, 3)*x_(3, 1)') - 2*Binary('x_(1, 3)')*Binary('x_(4, 2)*x_(1, 3)') - 2*Binary('x_(4, 2)')*Binary('x_(4, 2)*x_(1, 3)') - 2*Binary('x_(2, 4)')*Binary('x_(3, 1)*x_(2, 4)') - 2*Binary('x_(3, 1)')*Binary('x_(3, 1)*x_(2, 4)') + Binary('x_(3, 1)*x_(2, 4)')*Binary('x_(4, 3)') + Binary('x_(3, 1)*x_(2, 4)')*Binary('x_(1, 2)') + Binary('x_(4, 3)')*Binary('x_(1, 2)') + Binary('x_(2, 4)')*Binary('x_(4, 3)*x_(1, 2)') + Binary('x_(3, 1)')*Binary('x_(4, 3)*x_(1, 2)') - 2*Binary('x_(4, 3)')*Binary('x_(4, 3)*x_(1, 2)') - 2*Binary('x_(1, 2)')*Binary('x_(4, 3)*x_(1, 2)') + Binary('x_(4, 2)*x_(1, 3)')*Binary('x_(2, 1)') + Binary('x_(4, 2)*x_(1, 3)')*Binary('x_(3, 4)') + Binary('x_(2, 1)')*Binary('x_(3, 4)') + Binary('x_(1, 3)')*Binary('x_(2, 1)*x_(3, 4)') + Binary('x_(4, 2)')*Binary('x_(2, 1)*x_(3, 4)') - 2*Binary('x_(2, 1)')*Binary('x_(2, 1)*x_(3, 4)') - 2*Binary('x_(3, 4)')*Binary('x_(2, 1)*x_(3, 4)')

Constraints
  L1: discrete on nodes (1, 3): Binary('x_(1, 3)') + Binary('x_(3, 1)') == 1.0
  L1: discrete on nodes (2, 4): Binary('x_(2, 4)') + Binary('x_(4, 2)') == 1.0
  L1: discrete on nodes (1, 4): Binary('x_(1, 4)') + Binary('x_(4, 1)') == 1.0
  L1: discrete on nodes (2, 3): Binary('x_(2, 3)') + Binary('x_(3, 2)') == 1.0
  L1: discrete on nodes (2, 1): Binary('x_(2, 1)') + Binary('x_(1, 2)') == 1.0
  ...
  L1: >= transitive constraint nodes (3, 4, 2): Binary('x_(3, 4)') + Binary('x_(4, 2)') - Binary('x_(3, 2)') >= 0.0
  L1: <= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') <= 1.0
  L1: >= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') >= 0.0
  L1: <= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') <= 1.0
  L1: >= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') >= 0.0

Bounds


-------------------------

Sample(sample={'x_(1, 2)': 1.0, 'x_(1, 3)': 1.0, 'x_(1, 4)': 1.0, 'x_(2, 1)': 0.0, 'x_(2, 1)*x_(3, 4)': 0.0, 'x_(2, 3)': 0.0, 'x_(2, 3)*x_(3, 1)': 0.0, 'x_(2, 4)': 0.0, 'x_(3, 1)': 0.0, 'x_(3, 1)*x_(2, 4)': 0.0, 'x_(3, 2)': 1.0, 'x_(3, 2)*x_(2, 4)': 0.0, 'x_(3, 4)': 0.0, 'x_(4, 1)': 0.0, 'x_(4, 1)*x_(1, 3)': 0.0, 'x_(4, 2)': 1.0, 'x_(4, 2)*x_(1, 3)': 1.0, 'x_(4, 2)*x_(1, 4)': 1.0, 'x_(4, 3)': 1.0, 'x_(4, 3)*x_(1, 2)': 1.0}, energy=0.0, num_occurrences=1, is_satisfied=array([ True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True]), is_feasible=True)

-------------------------


14/04/2023 10:48:44

-------------------------

, (1, 2), (1, 3), (1, 4), (2, 3), (2, 4), (3, 4)

-------------------------

Constrained quadratic model: 24 variables, 54 constraints, 240 biases

Objective
  3*Binary('x_(1, 4)*x_(4, 2)') + 3*Binary('x_(1, 3)*x_(2, 4)') + 3*Binary('x_(2, 3)*x_(3, 1)') + 3*Binary('x_(4, 1)*x_(3, 2)') + 3*Binary('x_(1, 4)*x_(4, 3)') + 3*Binary('x_(3, 4)*x_(4, 1)') + 3*Binary('x_(2, 3)*x_(1, 2)') + 3*Binary('x_(3, 2)*x_(2, 1)') + 3*Binary('x_(1, 3)*x_(2, 1)') + 3*Binary('x_(4, 3)*x_(1, 2)') + 3*Binary('x_(2, 4)*x_(3, 1)') + 3*Binary('x_(3, 4)*x_(4, 2)') + Binary('x_(1, 4)')*Binary('x_(4, 2)') - 2*Binary('x_(1, 4)')*Binary('x_(1, 4)*x_(4, 2)') - 2*Binary('x_(4, 2)')*Binary('x_(1, 4)*x_(4, 2)') + Binary('x_(1, 3)')*Binary('x_(2, 4)') - 2*Binary('x_(1, 3)')*Binary('x_(1, 3)*x_(2, 4)') - 2*Binary('x_(2, 4)')*Binary('x_(1, 3)*x_(2, 4)') + Binary('x_(1, 4)*x_(4, 2)')*Binary('x_(2, 3)') + Binary('x_(1, 4)*x_(4, 2)')*Binary('x_(3, 1)') + Binary('x_(2, 4)')*Binary('x_(3, 1)') + Binary('x_(2, 3)')*Binary('x_(3, 1)') + Binary('x_(1, 4)')*Binary('x_(2, 3)*x_(3, 1)') + Binary('x_(4, 2)')*Binary('x_(2, 3)*x_(3, 1)') - 2*Binary('x_(2, 3)')*Binary('x_(2, 3)*x_(3, 1)') - 2*Binary('x_(3, 1)')*Binary('x_(2, 3)*x_(3, 1)') + Binary('x_(1, 3)*x_(2, 4)')*Binary('x_(4, 1)') + Binary('x_(1, 3)*x_(2, 4)')*Binary('x_(3, 2)') + Binary('x_(4, 1)')*Binary('x_(3, 2)') + Binary('x_(1, 3)')*Binary('x_(4, 1)*x_(3, 2)') + Binary('x_(2, 4)')*Binary('x_(4, 1)*x_(3, 2)') - 2*Binary('x_(4, 1)')*Binary('x_(4, 1)*x_(3, 2)') - 2*Binary('x_(3, 2)')*Binary('x_(4, 1)*x_(3, 2)') + Binary('x_(1, 4)')*Binary('x_(4, 3)') - 2*Binary('x_(1, 4)')*Binary('x_(1, 4)*x_(4, 3)') + Binary('x_(3, 2)')*Binary('x_(1, 4)*x_(4, 3)') - 2*Binary('x_(4, 3)')*Binary('x_(1, 4)*x_(4, 3)') + Binary('x_(4, 2)')*Binary('x_(3, 4)') + Binary('x_(4, 1)')*Binary('x_(3, 4)') + Binary('x_(2, 3)')*Binary('x_(3, 4)*x_(4, 1)') - 2*Binary('x_(4, 1)')*Binary('x_(3, 4)*x_(4, 1)') - 2*Binary('x_(3, 4)')*Binary('x_(3, 4)*x_(4, 1)') + Binary('x_(2, 3)')*Binary('x_(1, 2)') + Binary('x_(4, 3)')*Binary('x_(1, 2)') + Binary('x_(3, 4)*x_(4, 1)')*Binary('x_(1, 2)') - 2*Binary('x_(2, 3)')*Binary('x_(2, 3)*x_(1, 2)') + Binary('x_(4, 1)')*Binary('x_(2, 3)*x_(1, 2)') + Binary('x_(3, 4)')*Binary('x_(2, 3)*x_(1, 2)') - 2*Binary('x_(1, 2)')*Binary('x_(2, 3)*x_(1, 2)') + Binary('x_(1, 3)')*Binary('x_(2, 1)') + Binary('x_(3, 2)')*Binary('x_(2, 1)') + Binary('x_(1, 4)*x_(4, 3)')*Binary('x_(2, 1)') + Binary('x_(1, 4)')*Binary('x_(3, 2)*x_(2, 1)') - 2*Binary('x_(3, 2)')*Binary('x_(3, 2)*x_(2, 1)') + Binary('x_(4, 3)')*Binary('x_(3, 2)*x_(2, 1)') - 2*Binary('x_(2, 1)')*Binary('x_(3, 2)*x_(2, 1)') + Binary('x_(4, 2)')*Binary('x_(1, 3)*x_(2, 1)') - 2*Binary('x_(1, 3)')*Binary('x_(1, 3)*x_(2, 1)') + Binary('x_(3, 4)')*Binary('x_(1, 3)*x_(2, 1)') - 2*Binary('x_(2, 1)')*Binary('x_(1, 3)*x_(2, 1)') + Binary('x_(2, 4)')*Binary('x_(4, 3)*x_(1, 2)') + Binary('x_(3, 1)')*Binary('x_(4, 3)*x_(1, 2)') - 2*Binary('x_(4, 3)')*Binary('x_(4, 3)*x_(1, 2)') - 2*Binary('x_(1, 2)')*Binary('x_(4, 3)*x_(1, 2)') - 2*Binary('x_(2, 4)')*Binary('x_(2, 4)*x_(3, 1)') - 2*Binary('x_(3, 1)')*Binary('x_(2, 4)*x_(3, 1)') + Binary('x_(4, 3)')*Binary('x_(2, 4)*x_(3, 1)') + Binary('x_(1, 2)')*Binary('x_(2, 4)*x_(3, 1)') - 2*Binary('x_(4, 2)')*Binary('x_(3, 4)*x_(4, 2)') + Binary('x_(1, 3)')*Binary('x_(3, 4)*x_(4, 2)') - 2*Binary('x_(3, 4)')*Binary('x_(3, 4)*x_(4, 2)') + Binary('x_(2, 1)')*Binary('x_(3, 4)*x_(4, 2)')

Constraints
  L1: discrete on nodes (1, 3): Binary('x_(1, 3)') + Binary('x_(3, 1)') == 1.0
  L1: discrete on nodes (2, 4): Binary('x_(2, 4)') + Binary('x_(4, 2)') == 1.0
  L1: discrete on nodes (1, 4): Binary('x_(1, 4)') + Binary('x_(4, 1)') == 1.0
  L1: discrete on nodes (2, 3): Binary('x_(2, 3)') + Binary('x_(3, 2)') == 1.0
  L1: discrete on nodes (2, 1): Binary('x_(2, 1)') + Binary('x_(1, 2)') == 1.0
  ...
  L1: >= transitive constraint nodes (3, 4, 2): Binary('x_(3, 4)') + Binary('x_(4, 2)') - Binary('x_(3, 2)') >= 0.0
  L1: <= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') <= 1.0
  L1: >= transitive constraint nodes (4, 2, 1): Binary('x_(4, 2)') + Binary('x_(2, 1)') - Binary('x_(4, 1)') >= 0.0
  L1: <= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') <= 1.0
  L1: >= transitive constraint nodes (1, 2, 4): Binary('x_(1, 2)') + Binary('x_(2, 4)') - Binary('x_(1, 4)') >= 0.0

Bounds


-------------------------

Sample(sample={'x_(1, 2)': 1.0, 'x_(1, 3)': 0.0, 'x_(1, 3)*x_(2, 1)': 0.0, 'x_(1, 3)*x_(2, 4)': 0.0, 'x_(1, 4)': 0.0, 'x_(1, 4)*x_(4, 2)': 0.0, 'x_(1, 4)*x_(4, 3)': 0.0, 'x_(2, 1)': 0.0, 'x_(2, 3)': 0.0, 'x_(2, 3)*x_(1, 2)': 0.0, 'x_(2, 3)*x_(3, 1)': 0.0, 'x_(2, 4)': 0.0, 'x_(2, 4)*x_(3, 1)': 0.0, 'x_(3, 1)': 1.0, 'x_(3, 2)': 1.0, 'x_(3, 2)*x_(2, 1)': 0.0, 'x_(3, 4)': 0.0, 'x_(3, 4)*x_(4, 1)': 0.0, 'x_(3, 4)*x_(4, 2)': 0.0, 'x_(4, 1)': 1.0, 'x_(4, 1)*x_(3, 2)': 1.0, 'x_(4, 2)': 1.0, 'x_(4, 3)': 0.0, 'x_(4, 3)*x_(1, 2)': 0.0}, energy=0.0, num_occurrences=1, is_satisfied=array([False,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True]), is_feasible=False)

-------------------------


14/04/2023 10:55:41

-------------------------

, (1, 2), (3, 4), (5, 6)

-------------------------

Sample(sample={'x_(1, 2)': 0.0, 'x_(1, 3)': 0.0, 'x_(1, 3)*x_(4, 1)': 0.0, 'x_(1, 4)': 0.0, 'x_(1, 4)*x_(2, 3)': 0.0, 'x_(1, 5)': 1.0, 'x_(1, 6)': 1.0, 'x_(2, 1)': 1.0, 'x_(2, 3)': 0.0, 'x_(2, 4)': 0.0, 'x_(2, 4)*x_(3, 2)': 0.0, 'x_(2, 5)': 1.0, 'x_(2, 5)*x_(6, 2)': 0.0, 'x_(2, 6)': 1.0, 'x_(3, 1)': 1.0, 'x_(3, 1)*x_(4, 2)': 1.0, 'x_(3, 2)': 1.0, 'x_(3, 4)': 1.0, 'x_(3, 5)': 1.0, 'x_(3, 6)': 1.0, 'x_(4, 1)': 1.0, 'x_(4, 2)': 1.0, 'x_(4, 3)': 0.0, 'x_(4, 5)': 1.0, 'x_(4, 5)*x_(5, 3)': 0.0, 'x_(4, 6)': 1.0, 'x_(4, 6)*x_(3, 5)': 1.0, 'x_(5, 1)': 0.0, 'x_(5, 1)*x_(1, 6)': 0.0, 'x_(5, 2)': 0.0, 'x_(5, 2)*x_(2, 6)': 0.0, 'x_(5, 3)': 0.0, 'x_(5, 4)': 0.0, 'x_(5, 4)*x_(6, 3)': 0.0, 'x_(5, 6)': 0.0, 'x_(6, 1)': 0.0, 'x_(6, 1)*x_(1, 5)': 0.0, 'x_(6, 2)': 0.0, 'x_(6, 3)': 0.0, 'x_(6, 4)': 0.0, 'x_(6, 4)*x_(3, 6)': 0.0, 'x_(6, 5)': 1.0}, energy=0.0, num_occurrences=1, is_satisfied=array([ True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True,  True,  True,  True,  True,  True,  True,
        True,  True,  True]), is_feasible=True)

-------------------------

